pipeline {
  agent {
    label "java"
  }
  
  environment {
    EMAIL_RECIPIENTS = 'pramodprasanna17@gmail.com'
    PATH = "/opt/apache-maven-3.9.2/bin:${PATH}"
    NEXUS_URL = 'http://44.212.34.244:8081/repository/maven-releases/'
    NEXUS_CREDENTIALS = credentials('jenkins-nexus') // Jenkins credentials for Nexus
    GROUP_ID = 'com.maven'
    ARTIFACT_ID = 'SimpleWebApplication'
    VERSION = '9.1.14'
    //WAR_FILE_NAME = "SimpleWebApplication.war"
    WAR_FILE_NAME = "${ARTIFACT_ID}-${VERSION}.war"
    TOMCAT_CREDENTIALS = credentials('tomcat-password')
    TOMCAT_URL = 'http://54.172.228.221:8080/'
    TOMCAT_WEBAPPS_DIR = '/opt/tomcat/apache-tomcat-10.1.30/webapps/' // Define your Tomcat webapps directory here
    WORKSPACE = '/home/tomcat/workspace/Javawebappproject/'
    NEXUSUSER_NAME = 'admin'
    NEXUS_PASSWORD = 'admin12'
  }
  
  stages {
    stage('Build') {
      steps {
        sh 'mvn clean install'
      }
    }

    stage('Jacoco') {
      steps {
        jacoco()
      }
    }

    stage('SonarQube Analysis') {
      steps {
        script {
          def scannerHome = tool 'sonarqubescanner'
          withSonarQubeEnv('sonarqube') {
            sh """
              ${scannerHome}/bin/sonar-scanner \
              -Dsonar.projectKey=javawebappproject \
              -Dsonar.projectName=javawebappproject \
              -Dsonar.projectVersion=1.0 \
              -Dsonar.java.binaries='target/classes'
            """
          }
        }
      }
    }

    stage("Sonar Quality Gate Check") {
      steps {
        timeout(time: 1, unit: 'HOURS') {
          script {
            def qualityGate = waitForQualityGate()
            if (qualityGate.status != 'OK') {
              error "Pipeline aborted due to quality gate failure: ${qualityGate.status}"
            }
          }
        }
      }
    }

    stage('Upload to Nexus') {
      steps {
        nexusArtifactUploader artifacts: [[
          artifactId: 'SimpleWebApplication', 
          classifier: '', 
          file: 'target/SimpleWebApplication.war', 
          type: 'war'
        ]], 
        credentialsId: 'jenkins-nexus', 
        groupId: 'com.maven', 
        nexusUrl: '44.212.34.244:8081', // Ensure protocol is included
        nexusVersion: 'nexus3', 
        protocol: 'http', 
        repository: 'maven-releases', 
        version: '9.1.14'
      }
    }
  
     stage('Deploy WAR from Nexus to Tomcat') {
      agent {
        label "tomcat"
      }
      steps {
        script {
          // Download the WAR from Nexus
          sh """
          curl -u admin:admin12 -O http://44.212.34.244:8081/repository/maven-releases/com/maven/SimpleWebApplication/9.1.14/SimpleWebApplication-9.1.14.war
          pwd
          """
}
}
}

stage('Deploy WAR to Tomcat') {
          agent {
              label "tomcat"
                }
           steps {
              // withCredentials([usernamePassword(credentialsId: 'tomcat_server', usernameVariable: 'hostmanager', passwordVariable: 'hostmanager1')]) {
                   script {
                        sh "sudo systemctl stop tomcat"
                        sh "cp /home/tomcat/workspace/Javawebappproject/SimpleWebApplication-9.1.14.war ${TOMCAT_WEBAPPS_DIR}"
                       //sh "sudo cp ${WORKSPACE}${WAR_FILE_NAME}/ ${TOMCAT_WEBAPPS_DIR}"
                        sh "sudo systemctl start tomcat"
                   }
               }
}

post {
    failure {
      script {
        mail (to: 'pramodprasanna17@gmail.com',
              subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) failed",
              body: "Please visit ${env.BUILD_URL} for further information"
        )
      }
    }
    success {
      script {
        mail (to: 'pramodprasanna17@gmail.com', 
              subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) succeeded.",
              body: "Please visit ${env.BUILD_URL} for further information."
        )
      }
    }
}
}
}
